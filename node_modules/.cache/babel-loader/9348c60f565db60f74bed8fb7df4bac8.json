{"ast":null,"code":"import nacl from '@toruslabs/tweetnacl-js';\nconst l = nacl.lowlevel;\n\nfunction getED25519Key(privateKey) {\n  let privKey;\n\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  } // Implementation copied from tweetnacl\n\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n\n  return {\n    sk: Buffer.from(sk),\n    pk: Buffer.from(pk)\n  };\n}\n\nexport { getED25519Key };","map":{"version":3,"mappings":";AAQA,MAAMA,CAAC,GAAIC,IAAY,CAACC,QAAxB;;SAEgBC,cAAcC;EAI5B,IAAIC,OAAJ;;EACA,IAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;IAClCC,OAAO,GAAGC,MAAM,CAACC,IAAPD,CAAYF,UAAZE,EAAwB,KAAxBA,CAAVD;EADF,OAEO;IACLA,OAAO,GAAGD,UAAVC;EACD,CAT2BD,CAS3B;;;EAGD,MAAMI,CAAC,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAV;EACA,MAAMC,CAAC,GAAG,CAACV,CAAC,CAACW,EAAFX,EAAD,EAASA,CAAC,CAACW,EAAFX,EAAT,EAAiBA,CAAC,CAACW,EAAFX,EAAjB,EAAyBA,CAAC,CAACW,EAAFX,EAAzB,CAAV;EACA,MAAMY,EAAE,GAAG,IAAIH,UAAJ,CAAe,CAAC,GAAG,IAAIA,UAAJ,CAAeJ,OAAf,CAAJ,EAA6B,GAAG,IAAII,UAAJ,CAAe,EAAf,CAAhC,CAAf,CAAX;EACA,MAAMI,EAAE,GAAG,IAAIJ,UAAJ,CAAe,EAAf,CAAX;EACAT,CAAC,CAACc,WAAFd,CAAcQ,CAAdR,EAAiBY,EAAjBZ,EAAqB,EAArBA;EAEAQ,CAAC,CAAC,CAAD,CAADA,IAAQ,GAARA;EAEAA,CAAC,CAAC,EAAD,CAADA,IAAS,GAATA;EAEAA,CAAC,CAAC,EAAD,CAADA,IAAS,EAATA;EACAR,CAAC,CAACe,UAAFf,CAAaU,CAAbV,EAAgBQ,CAAhBR;EACAA,CAAC,CAACgB,IAAFhB,CAAOa,EAAPb,EAAWU,CAAXV;;EACA,KAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgCL,EAAE,CAACK,CAAC,GAAG,EAAL,CAAFL,GAAaC,EAAE,CAACI,CAAD,CAAfL;;EAEhC,OAAO;IAAEA,EAAE,EAAEN,MAAM,CAACC,IAAPD,CAAYM,EAAZN,CAAN;IAAuBO,EAAE,EAAEP,MAAM,CAACC,IAAPD,CAAYO,EAAZP;EAA3B,CAAP;AACD","names":["l","nacl","lowlevel","getED25519Key","privateKey","privKey","Buffer","from","d","Uint8Array","p","gf","sk","pk","crypto_hash","scalarbase","pack","i"],"sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}