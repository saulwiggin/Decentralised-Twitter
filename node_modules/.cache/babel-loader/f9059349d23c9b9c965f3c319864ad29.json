{"ast":null,"code":"import { LOGIN_PROVIDER } from '@toruslabs/openlogin';\nimport { CHAIN_NAMESPACES, SOLANA_ADAPTERS, EVM_ADAPTERS, getChainConfig, WALLET_ADAPTERS, ADAPTER_CATEGORY, ADAPTER_STATUS, ADAPTER_EVENTS } from '@web3auth/base';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Web3AuthCore } from '@web3auth/core';\nimport LoginModal, { LOGIN_MODAL_EVENTS } from '@web3auth/ui';\nimport log from 'loglevel';\nconst defaultSolanaDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Solana Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultEvmDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V1]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultSolanaWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultEvmWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst OPENLOGIN_PROVIDERS = [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.FACEBOOK, LOGIN_PROVIDER.TWITTER, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD, LOGIN_PROVIDER.TWITCH, LOGIN_PROVIDER.APPLE, LOGIN_PROVIDER.LINE, LOGIN_PROVIDER.GITHUB, LOGIN_PROVIDER.KAKAO, LOGIN_PROVIDER.LINKEDIN, LOGIN_PROVIDER.WEIBO, LOGIN_PROVIDER.WECHAT, LOGIN_PROVIDER.EMAIL_PASSWORDLESS];\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst getDefaultAdapterModule = async params => {\n  const {\n    name,\n    customChainConfig,\n    clientId\n  } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace)) throw new Error(\"Invalid chainNamespace: \".concat(customChainConfig.chainNamespace));\n\n  const finalChainConfig = _objectSpread$2(_objectSpread$2({}, getChainConfig(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId)), customChainConfig || {});\n\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const {\n      TorusWalletAdapter\n    } = await import('@web3auth/torus-evm-adapter');\n    const adapter = new TorusWalletAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const {\n      SolanaWalletAdapter\n    } = await import('@web3auth/torus-solana-adapter');\n    const adapter = new SolanaWalletAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const {\n      MetamaskAdapter\n    } = await import('@web3auth/metamask-adapter');\n    const adapter = new MetamaskAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const {\n      PhantomAdapter\n    } = await import('@web3auth/phantom-adapter');\n    const adapter = new PhantomAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V1) {\n    const {\n      WalletConnectV1Adapter\n    } = await import('@web3auth/wallet-connect-v1-adapter');\n    const adapter = new WalletConnectV1Adapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const {\n      OpenloginAdapter,\n      getOpenloginDefaultOptions\n    } = await import('@web3auth/openlogin-adapter');\n    const defaultOptions = getOpenloginDefaultOptions(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId);\n    const adapter = new OpenloginAdapter(_objectSpread$2(_objectSpread$2({}, defaultOptions), {}, {\n      chainConfig: _objectSpread$2(_objectSpread$2({}, defaultOptions.chainConfig || {}), finalChainConfig),\n      adapterSettings: _objectSpread$2(_objectSpread$2({}, defaultOptions.adapterSettings), {}, {\n        clientId\n      })\n    }));\n    return adapter;\n  }\n\n  throw new Error(\"Invalid wallet adapter name\");\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst getAdapterSocialLogins = function (adapterName, adapter) {\n  let loginMethodsConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const finalLoginMethodsConfig = {};\n\n  if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n    OPENLOGIN_PROVIDERS.forEach(loginMethod => {\n      const currentLoginMethodConfig = loginMethodsConfig[loginMethod] || {\n        name: loginMethod,\n        showOnMobile: true,\n        showOnModal: true,\n        showOnDesktop: true\n      };\n      finalLoginMethodsConfig[loginMethod] = _objectSpread$1({}, currentLoginMethodConfig);\n      log.debug(\"OpenLogin login method ui config\", finalLoginMethodsConfig);\n    });\n  } else {\n    throw new Error(\"\".concat(adapterName, \" is not a valid adapter\"));\n  }\n\n  return finalLoginMethodsConfig;\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nlog.enableAll();\nlog.setLevel(\"debug\");\n\nclass Web3Auth extends Web3AuthCore {\n  constructor(options) {\n    var _this$options$uiConfi, _this$options$uiConfi2;\n\n    super(options);\n\n    _defineProperty(this, \"loginModal\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"modalConfig\", defaultEvmDappModalConfig);\n\n    this.options = _objectSpread({}, options);\n    const providedChainConfig = this.options.chainConfig;\n\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else {\n      throw new Error(\"Invalid chainNamespace provided: \".concat(providedChainConfig.chainNamespace));\n    }\n\n    this.loginModal = new LoginModal({\n      theme: (_this$options$uiConfi = this.options.uiConfig) === null || _this$options$uiConfi === void 0 ? void 0 : _this$options$uiConfi.theme,\n      appLogo: ((_this$options$uiConfi2 = this.options.uiConfig) === null || _this$options$uiConfi2 === void 0 ? void 0 : _this$options$uiConfi2.appLogo) || \"\",\n      version: \"\",\n      adapterListener: this\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  async initModal(params) {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig; // merge default adapters with the custom configured adapters.\n\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n    const adapterConfigurationPromises = allAdapters.map(async adapterName => {\n      var _this$modalConfig$ada, _params$modalConfig, _this$modalConfig$ada2, _this$modalConfig$ada3; // start with the default config of adapter.\n\n\n      let adapterConfig = ((_this$modalConfig$ada = this.modalConfig.adapters) === null || _this$modalConfig$ada === void 0 ? void 0 : _this$modalConfig$ada[adapterName]) || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true\n      }; // override the default config of adapter if some config is being provided by the user.\n\n      if (params !== null && params !== void 0 && (_params$modalConfig = params.modalConfig) !== null && _params$modalConfig !== void 0 && _params$modalConfig[adapterName]) {\n        adapterConfig = _objectSpread(_objectSpread({}, adapterConfig), params.modalConfig[adapterName]);\n      }\n\n      this.modalConfig.adapters[adapterName] = adapterConfig; // check if adapter is configured/added by user and exist in walletAdapters map.\n\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, (_this$modalConfig$ada2 = this.modalConfig.adapters) === null || _this$modalConfig$ada2 === void 0 ? void 0 : _this$modalConfig$ada2[adapterName].showOnModal); // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n\n      if (!adapter && (_this$modalConfig$ada3 = this.modalConfig.adapters) !== null && _this$modalConfig$ada3 !== void 0 && _this$modalConfig$ada3[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId\n        });\n        this.walletAdapters[adapterName] = ad;\n        return adapterName;\n      } else if ((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.IN_APP || (adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        var _this$modalConfig$ada4;\n\n        if (!((_this$modalConfig$ada4 = this.modalConfig.adapters) !== null && _this$modalConfig$ada4 !== void 0 && _this$modalConfig$ada4[adapterName].showOnModal)) return; // add client id to openlogin adapter, same web3auth client id can be used in openlogin.\n        // this id is being overridden if user is also passing client id in openlogin's adapter constructor.\n\n        if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n          this.walletAdapters[adapterName].setAdapterSettings({\n            clientId: this.options.clientId\n          });\n        } // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n\n\n        if (!adapter.chainConfigProxy) {\n          var _this$coreOptions$cha;\n\n          const chainConfig = _objectSpread(_objectSpread({}, getChainConfig(providedChainConfig.chainNamespace, (_this$coreOptions$cha = this.coreOptions.chainConfig) === null || _this$coreOptions$cha === void 0 ? void 0 : _this$coreOptions$cha.chainId)), this.coreOptions.chainConfig);\n\n          this.walletAdapters[adapterName].setChainConfig(chainConfig);\n        }\n\n        return adapterName;\n      }\n    });\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some(adapter => {\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters[adapter.name].showOnModal !== true) return false;\n      if (!this.modalConfig.adapters[adapter.name].loginMethods) return true;\n      if (Object.values(this.modalConfig.adapters[adapter.name].loginMethods).some(method => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\"); // Now, initialize the adapters.\n\n    const initPromises = adapterNames.map(async adapterName => {\n      if (!adapterName) return;\n\n      try {\n        const adapter = this.walletAdapters[adapterName]; // only initialize a external adapter here if it is a cached adapter.\n\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        } // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n\n\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({\n          autoConnect: this.cachedAdapter === adapterName\n        }); // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n    const hasExternalWallets = allAdapters.some(adapterName => {\n      var _this$walletAdapters$, _this$modalConfig$ada5;\n\n      return ((_this$walletAdapters$ = this.walletAdapters[adapterName]) === null || _this$walletAdapters$ === void 0 ? void 0 : _this$walletAdapters$.type) === ADAPTER_CATEGORY.EXTERNAL && ((_this$modalConfig$ada5 = this.modalConfig.adapters) === null || _this$modalConfig$ada5 === void 0 ? void 0 : _this$modalConfig$ada5[adapterName].showOnModal);\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    } // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n\n\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, {\n        showExternalWalletsOnly: true\n      });\n    }\n  }\n\n  async connect() {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, err => {\n        return reject(err);\n      });\n    });\n  }\n\n  async initExternalWalletAdapters(externalWalletsInitialized, options) {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig = {};\n    const adaptersData = {};\n    const adapterPromises = Object.keys(this.walletAdapters).map(async adapterName => {\n      try {\n        const adapter = this.walletAdapters[adapterName];\n\n        if ((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL) {\n          log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n          this.subscribeToAdapterEvents(adapter); // we are not initializing cached adapter here as it is already being initialized in initModal before.\n\n          if (this.cachedAdapter === adapterName) {\n            return;\n          }\n\n          if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({\n            autoConnect: this.cachedAdapter === adapterName\n          });\n          adaptersConfig[adapterName] = this.modalConfig.adapters[adapterName];\n          adaptersData[adapterName] = adapter.adapterData || {};\n          return adapterName;\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n    const adapterInitResults = await Promise.all(adapterPromises);\n    const finalAdaptersConfig = {};\n    adapterInitResults.forEach(result => {\n      if (result) {\n        finalAdaptersConfig[result] = adaptersConfig[result];\n      }\n    });\n    this.loginModal.addWalletLogins(finalAdaptersConfig, {\n      showExternalWalletsOnly: !!(options !== null && options !== void 0 && options.showExternalWalletsOnly)\n    });\n  }\n\n  initializeInAppWallet(adapterName) {\n    log.info(\"adapterInitResults\", adapterName);\n\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      var _this$modalConfig$ada6, _this$options$uiConfi3;\n\n      this.loginModal.addSocialLogins(adapterName, getAdapterSocialLogins(adapterName, this.walletAdapters[adapterName], (_this$modalConfig$ada6 = this.modalConfig.adapters[adapterName]) === null || _this$modalConfig$ada6 === void 0 ? void 0 : _this$modalConfig$ada6.loginMethods), ((_this$options$uiConfi3 = this.options.uiConfig) === null || _this$options$uiConfi3 === void 0 ? void 0 : _this$options$uiConfi3.loginMethodsOrder) || OPENLOGIN_PROVIDERS);\n    }\n  }\n\n  subscribeToLoginModalEvents() {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async params => {\n      try {\n        await this.connectTo(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(\"Error while connecting to adapter: \".concat(params.adapter), error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async params => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(\"Error while disconnecting\", error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async visibility => {\n      var _this$walletAdapters$2;\n\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const walletConnectStatus = (_this$walletAdapters$2 = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]) === null || _this$walletAdapters$2 === void 0 ? void 0 : _this$walletAdapters$2.status;\n\n      if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n        // refreshing session for wallet connect whenever modal is opened.\n        try {\n          this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n        } catch (error) {\n          log.error(\"Error while disconnecting to wallet connect in core\", error);\n        }\n      }\n    });\n  }\n\n}\n\nexport { OPENLOGIN_PROVIDERS, Web3Auth, defaultEvmDappModalConfig, defaultEvmWalletModalConfig, defaultSolanaDappModalConfig, defaultSolanaWalletModalConfig };","map":{"version":3,"mappings":"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","names":["defaultSolanaDappModalConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","adapters","SOLANA_ADAPTERS","TORUS_SOLANA","label","showOnModal","showOnMobile","showOnDesktop","OPENLOGIN","PHANTOM","defaultEvmDappModalConfig","EIP155","EVM_ADAPTERS","TORUS_EVM","METAMASK","WALLET_CONNECT_V1","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","OPENLOGIN_PROVIDERS","LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITTER","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","WEIBO","WECHAT","EMAIL_PASSWORDLESS","getDefaultAdapterModule","params","name","customChainConfig","clientId","Object","values","includes","Error","finalChainConfig","getChainConfig","chainId","WALLET_ADAPTERS","TorusWalletAdapter","adapter","chainConfig","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV1Adapter","OpenloginAdapter","getOpenloginDefaultOptions","defaultOptions","adapterSettings","getAdapterSocialLogins","adapterName","loginMethodsConfig","finalLoginMethodsConfig","forEach","loginMethod","currentLoginMethodConfig","log","debug","enableAll","setLevel","Web3Auth","Web3AuthCore","constructor","options","providedChainConfig","authMode","modalConfig","loginModal","LoginModal","theme","uiConfig","_this$options$uiConfi","appLogo","version","adapterListener","subscribeToLoginModalEvents","initModal","checkInitRequirements","allAdapters","Set","keys","walletAdapters","adapterConfigurationPromises","map","adapterConfig","_params$modalConfig","_this$modalConfig$ada2","_this$modalConfig$ada3","ad","type","ADAPTER_CATEGORY","IN_APP","EXTERNAL","cachedAdapter","_this$modalConfig$ada4","setAdapterSettings","chainConfigProxy","coreOptions","_this$coreOptions$cha","setChainConfig","adapterNames","Promise","all","hasInAppWallets","some","loginMethods","method","initPromises","subscribeToAdapterEvents","status","ADAPTER_STATUS","NOT_READY","init","autoConnect","initializeInAppWallet","error","READY","hasExternalWallets","_this$modalConfig$ada5","initExternalWalletContainer","initExternalWalletAdapters","showExternalWalletsOnly","connect","provider","open","resolve","reject","once","ADAPTER_EVENTS","CONNECTED","ERRORED","err","externalWalletsInitialized","adaptersConfig","adaptersData","adapterPromises","adapterData","adapterInitResults","finalAdaptersConfig","result","addWalletLogins","info","addSocialLogins","_this$modalConfig$ada6","loginMethodsOrder","on","LOGIN_MODAL_EVENTS","LOGIN","connectTo","loginParams","INIT_EXTERNAL_WALLETS","DISCONNECT","logout","MODAL_VISIBILITY","visibility","emit","walletConnectStatus","_this$walletAdapters$2"],"sources":["../src/config.ts","../src/default.ts","../src/utils.ts","../src/modalManager.ts"],"sourcesContent":[null,null,null,null]},"metadata":{},"sourceType":"module"}