{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Duplex } from 'readable-stream';\nimport { randomId } from '@toruslabs/openlogin-utils';\nimport { EventEmitter } from 'events';\nimport stringify from 'fast-safe-stringify';\nimport eos from 'end-of-stream';\nimport once from 'once';\nimport pump from 'pump';\n\nfunction noop() {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nclass BasePostMessageStream extends Duplex {\n  constructor(_ref) {\n    let {\n      name,\n      target,\n      targetWindow = window,\n      targetOrigin = \"*\"\n    } = _ref;\n    super({\n      objectMode: true\n    });\n\n    _defineProperty(this, \"_init\", void 0);\n\n    _defineProperty(this, \"_haveSyn\", void 0);\n\n    _defineProperty(this, \"_name\", void 0);\n\n    _defineProperty(this, \"_target\", void 0);\n\n    _defineProperty(this, \"_targetWindow\", void 0);\n\n    _defineProperty(this, \"_targetOrigin\", void 0);\n\n    _defineProperty(this, \"_onMessage\", void 0);\n\n    _defineProperty(this, \"_synIntervalId\", void 0);\n\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n    window.addEventListener(\"message\", this._onMessage, false);\n\n    this._handShake();\n  }\n\n  _break() {\n    this.cork();\n\n    this._write(BRK, null, noop);\n\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake() {\n    this._write(SYN, null, noop);\n\n    this.cork();\n  }\n\n  _onData(data) {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data) {\n    const originConstraint = this._targetOrigin;\n\n    this._targetWindow.postMessage({\n      target: this._target,\n      data\n    }, originConstraint);\n  }\n\n  onMessage(event) {\n    const message = event.data; // validate message\n\n    if (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin || event.source !== this._targetWindow || typeof message !== \"object\" || message.target !== this._name || !message.data) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read() {\n    return undefined;\n  }\n\n  _write(data, _, cb) {\n    this._postMessage(data);\n\n    cb();\n  }\n\n  _destroy() {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n\n}\n\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone(arr) {\n  const n = arr.length;\n  const copy = new Array(n);\n\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nclass SafeEventEmitter extends EventEmitter {\n  emit(type) {\n    let doError = type === \"error\";\n    const events = this._events;\n\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    } // If there is no 'error' event listener then throw.\n\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (doError) {\n      let er;\n\n      if (args.length > 0) {\n        [er] = args;\n      }\n\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      } // At least give some kind of context to the user\n\n\n      const err = new Error(\"Unhandled error.\".concat(er ? \" (\".concat(er.message, \")\") : \"\"));\n      err.context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n\n}\n\nclass SerializableError extends Error {\n  constructor(_ref) {\n    let {\n      code,\n      message,\n      data\n    } = _ref;\n\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"data\", void 0);\n\n    this.code = code;\n\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString() {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack\n    });\n  }\n\n}\n\nfunction serializeError(error) {\n  return error.toString();\n}\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n};\n\nfunction createErrorMiddleware(log) {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({\n          code: -32603,\n          message: \"invalid method\"\n        });\n        end();\n        return;\n      }\n\n      next(done => {\n        const {\n          error\n        } = res;\n\n        if (!error) {\n          return done();\n        }\n\n        log.error(\"OpenLogin - RPC Error: \".concat(error.message), error);\n        return done();\n      });\n    } catch (error) {\n      log.error(\"OpenLogin - RPC Error thrown: \".concat(error.message), error);\n      res.error = new SerializableError({\n        code: -32603,\n        message: error.message\n      });\n      end();\n    }\n  };\n}\n\nfunction createStreamMiddleware() {\n  const idMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res) {\n    const context = idMap[res.id];\n\n    if (!context) {\n      throw new Error(\"StreamMiddleware - Unknown response id \\\"\".concat(res.id, \"\\\"\"));\n    }\n\n    delete idMap[res.id]; // copy whole res onto original res\n\n    Object.assign(context.res, res); // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n\n    setTimeout(context.end);\n  }\n\n  function processNotification(res) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res, _encoding, cb) {\n    let err;\n\n    try {\n      const isNotification = !res.id;\n\n      if (isNotification) {\n        processNotification(res);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    } // continue processing stream\n\n\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage\n  });\n\n  const middleware = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req); // register request on id map\n\n    idMap[req.id] = {\n      req,\n      res,\n      next,\n      end\n    };\n  };\n\n  return {\n    events,\n    middleware,\n    stream\n  };\n}\n\nfunction createScaffoldMiddleware(handlers) {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method]; // if no handler, return\n\n    if (handler === undefined) {\n      return next();\n    } // if handler is fn, call as middleware\n\n\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    } // if handler is some other value, use as result\n\n\n    res.result = handler;\n    return end();\n  };\n}\n\nfunction createIdRemapMiddleware() {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next(done => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nfunction createLoggerMiddleware(logger) {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nfunction createAsyncMiddleware(asyncMiddleware) {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise;\n    const nextPromise = new Promise(resolve => {\n      resolveNextPromise = resolve;\n    });\n    let returnHandlerCallback = null;\n    let nextWasCalled = false; // This will be called by the consumer's async middleware.\n\n    const asyncNext = async () => {\n      nextWasCalled = true; // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next(runReturnHandlersCallback => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n\n        returnHandlerCallback(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        returnHandlerCallback(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\n\n\nclass JRPCEngine extends SafeEventEmitter {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"_middleware\", void 0);\n\n    this._middleware = [];\n  }\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n\n\n  static async _runAllMiddleware(req, res, middlewareStack) {\n    const returnHandlers = [];\n    let error = null;\n    let isComplete = false; // Go down stack of middleware, call and collect optional returnHandlers\n\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n\n      if (isComplete) {\n        break;\n      }\n    }\n\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n\n\n  static _runMiddleware(req, res, middleware, returnHandlers) {\n    return new Promise(resolve => {\n      const end = err => {\n        const error = err || res.error;\n\n        if (error) {\n          res.error = serializeError(error);\n        } // True indicates that the request should end\n\n\n        resolve([error, true]);\n      };\n\n      const next = returnHandler => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({\n                code: -32603,\n                message: \"JRPCEngine: 'next' return handlers must be functions\"\n              }));\n            }\n\n            returnHandlers.push(returnHandler);\n          } // False indicates that the request should not end\n\n\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n\n\n  static async _runReturnHandlers(handlers) {\n    for (const handler of handlers) {\n      await new Promise((resolve, reject) => {\n        handler(err => err ? reject(err) : resolve());\n      });\n    }\n  }\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n\n\n  static _checkForCompletion(req, res, isComplete) {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({\n        code: -32603,\n        message: \"Response has no error or result for request\"\n      });\n    }\n\n    if (!isComplete) {\n      throw new SerializableError({\n        code: -32603,\n        message: \"Nothing ended request\"\n      });\n    }\n  }\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n\n\n  push(middleware) {\n    this._middleware.push(middleware);\n  }\n\n  handle(req, cb) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req, cb);\n    }\n\n    return this._promiseHandle(req);\n  }\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n\n\n  asMiddleware() {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError);\n        }\n\n        return next(async handlerCallback => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  async _handleBatch(reqs, cb) {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all( // 1. Begin executing each request in the order received\n      reqs.map(this._promiseHandle.bind(this))); // 3. Return batch response\n\n      if (cb) {\n        return cb(null, responses);\n      }\n\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n  /**\n   * A promise-wrapped _handle.\n   */\n\n\n  _promiseHandle(req) {\n    return new Promise(resolve => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n\n\n  async _handle(callerReq, cb) {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({\n        code: -32603,\n        message: \"request must be plain object\"\n      });\n      return cb(error, {\n        id: undefined,\n        jsonrpc: \"2.0\",\n        error\n      });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({\n        code: -32603,\n        message: \"method must be string\"\n      });\n      return cb(error, {\n        id: callerReq.id,\n        jsonrpc: \"2.0\",\n        error\n      });\n    }\n\n    const req = _objectSpread$1({}, callerReq);\n\n    const res = {\n      id: req.id,\n      jsonrpc: req.jsonrpc\n    };\n    let error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res);\n  }\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n\n\n  async _processRequest(req, res) {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware); // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n\n    JRPCEngine._checkForCompletion(req, res, isComplete); // The return handlers should run even if an error was encountered during\n    // middleware processing.\n\n\n    await JRPCEngine._runReturnHandlers(returnHandlers); // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n\n    if (error) {\n      throw error;\n    }\n  }\n\n}\n\nfunction mergeMiddleware(middlewareStack) {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach(middleware => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nfunction createEngineStream(opts) {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const {\n    engine\n  } = opts; // eslint-disable-next-line prefer-const\n\n  let stream;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req, _encoding, cb) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({\n    objectMode: true,\n    read,\n    write\n  }); // forward notifications\n\n  if (engine.on) {\n    engine.on(\"notification\", message => {\n      stream.push(message);\n    });\n  }\n\n  return stream;\n}\n\nclass Substream extends Duplex {\n  constructor(_ref) {\n    let {\n      parent,\n      name\n    } = _ref;\n    super({\n      objectMode: true\n    });\n\n    _defineProperty(this, \"_parent\", void 0);\n\n    _defineProperty(this, \"_name\", void 0);\n\n    this._parent = parent;\n    this._name = name;\n  }\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n\n\n  _read() {\n    return undefined;\n  }\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n\n\n  _write(chunk, _encoding, callback) {\n    this._parent.push({\n      name: this._name,\n      data: chunk\n    });\n\n    callback();\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nclass ObjectMultiplex extends Duplex {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(_objectSpread(_objectSpread({}, opts), {}, {\n      objectMode: true\n    }));\n\n    _defineProperty(this, \"_substreams\", void 0);\n\n    _defineProperty(this, \"getStream\", void 0);\n\n    this._substreams = {};\n  }\n\n  createStream(name) {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n    } // create substream\n\n\n    const substream = new Substream({\n      parent: this,\n      name\n    });\n    this._substreams[name] = substream; // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    anyStreamEnd(this, _error => substream.destroy(_error || undefined));\n    return substream;\n  } // ignore streams (dont display orphaned data warning)\n\n\n  ignoreStream(name) {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n    } // set\n\n\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read() {\n    return undefined;\n  }\n\n  _write(chunk, _encoding, callback) {\n    const {\n      name,\n      data\n    } = chunk;\n\n    if (!name) {\n      window.console.warn(\"ObjectMultiplex - malformed chunk without name \\\"\".concat(chunk, \"\\\"\"));\n      return callback();\n    } // get corresponding substream\n\n\n    const substream = this._substreams[name];\n\n    if (!substream) {\n      window.console.warn(\"ObjectMultiplex - orphaned data for stream \\\"\".concat(name, \"\\\"\"));\n      return callback();\n    } // push data into substream\n\n\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n\n} // util\n\n\nfunction anyStreamEnd(stream, _cb) {\n  const cb = once(_cb);\n  eos(stream, {\n    readable: false\n  }, cb);\n  eos(stream, {\n    writable: false\n  }, cb);\n}\n\nfunction setupMultiplex(stream) {\n  const mux = new ObjectMultiplex();\n\n  mux.getStream = function streamHelper(name) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n\n    return this.createStream(name);\n  };\n\n  pump(stream, mux, stream, err => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n\nclass PostMessageStream extends BasePostMessageStream {\n  _postMessage(data) {\n    let originConstraint = this._targetOrigin;\n\n    if (typeof data === \"object\") {\n      const dataObj = data;\n\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data;\n\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0];\n\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin;\n          } // add a constraint for the response\n\n\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage({\n      target: this._target,\n      data\n    }, originConstraint);\n  }\n\n}\n\nexport { BasePostMessageStream, IGNORE_SUBSTREAM, JRPCEngine, ObjectMultiplex, PostMessageStream, SafeEventEmitter, SerializableError, Substream, createAsyncMiddleware, createEngineStream, createErrorMiddleware, createIdRemapMiddleware, createLoggerMiddleware, createScaffoldMiddleware, createStreamMiddleware, getRpcPromiseCallback, mergeMiddleware, serializeError, setupMultiplex };","map":{"version":3,"mappings":";;;;;;;;;AAEA,SAASA,IAAT;EACE,OAAOC,SAAP;AACD;;AAED,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,GAAG,GAAG,KAAZ;;MAEqBC,8BAA8BC;EAiBjDC;QAAY;MACVC,IADU;MAEVC,MAFU;MAGVC,YAAY,GAAGC,MAHL;MAIVC,YAAY,GAAG;IAJL;IAWV,MAAM;MACJC,UAAU,EAAE;IADR,CAAN;;;;;;;;;;;;;;;;;;IAGA,IAAI,CAACL,IAAD,IAAS,CAACC,MAAd,EAAsB;MACpB,MAAM,IAAIK,KAAJ,CAAU,gBAAV,CAAN;IACD;;IACD,KAAKC,KAAL,GAAa,KAAb;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,KAAL,GAAaT,IAAb;IACA,KAAKU,OAAL,GAAeT,MAAf,CApBFF,CAoBE;;IACA,KAAKY,aAAL,GAAqBT,YAArB;IACA,KAAKU,aAAL,GAAqBR,YAArB;IACA,KAAKS,UAAL,GAAkB,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAlB;IACA,KAAKC,cAAL,GAAsB,IAAtB;IAEAb,MAAM,CAACc,gBAAPd,CAAwB,SAAxBA,EAAmC,KAAKU,UAAxCV,EAAoD,KAApDA;;IACA,KAAKe,UAAL;EACD;;EAEDC,MAAM;IACJ,KAAKC,IAAL;;IACA,KAAKC,MAAL,CAAYzB,GAAZ,EAAiB,IAAjB,EAAuBJ,IAAvB;;IACA,KAAKgB,QAAL,GAAgB,KAAhB;IACA,KAAKD,KAAL,GAAa,KAAb;EACD;;EAEDW,UAAU;IACR,KAAKG,MAAL,CAAY3B,GAAZ,EAAiB,IAAjB,EAAuBF,IAAvB;;IACA,KAAK4B,IAAL;EACD;;EAEDE,OAAO,CAACC,IAAD;IACL,IAAI,CAAC,KAAKhB,KAAV,EAAiB;MACf;MACA,IAAIgB,IAAI,KAAK7B,GAAb,EAAkB;QAChB,KAAKc,QAAL,GAAgB,IAAhB;;QACA,KAAKa,MAAL,CAAY1B,GAAZ,EAAiB,IAAjB,EAAuBH,IAAvB;MAFF,OAGO,IAAI+B,IAAI,KAAK5B,GAAb,EAAkB;QACvB,KAAKY,KAAL,GAAa,IAAb;;QACA,IAAI,CAAC,KAAKC,QAAV,EAAoB;UAClB,KAAKa,MAAL,CAAY1B,GAAZ,EAAiB,IAAjB,EAAuBH,IAAvB;QACD;;QACD,KAAKgC,MAAL;MACD;IAXH,OAYO,IAAID,IAAI,KAAK3B,GAAb,EAAkB;MACvB,KAAKuB,MAAL;IADK,OAEA;MACL;MACA,IAAI;QACF,KAAKM,IAAL,CAAUF,IAAV;MADF,EAEE,OAAOG,GAAP,EAAY;QACZ,KAAKC,IAAL,CAAU,OAAV,EAAmBD,GAAnB;MACD;IACF;EACF;;EAEDE,YAAY,CAACL,IAAD;IACV,MAAMM,gBAAgB,GAAG,KAAKjB,aAA9B;;IACA,KAAKD,aAAL,CAAmBmB,WAAnB,CACE;MACE7B,MAAM,EAAE,KAAKS,OADf;MAEEa;IAFF,CADF,EAKEM,gBALF;EAOD;;EAEDf,SAAS,CAACiB,KAAD;IACP,MAAMC,OAAO,GAAGD,KAAK,CAACR,IAAtB,CADO,CACP;;IAGA,IACG,KAAKX,aAAL,KAAuB,GAAvB,IAA8BmB,KAAK,CAACE,MAANF,KAAiB,KAAKnB,aAApD,IACDmB,KAAK,CAACG,MAANH,KAAiB,KAAKpB,aADrB,IAED,OAAOqB,OAAP,KAAmB,QAFlB,IAGDA,OAAO,CAAC/B,MAAR+B,KAAmB,KAAKvB,KAHvB,IAID,CAACuB,OAAO,CAACT,IALX,EAME;MACA;IACD;;IAED,KAAKD,OAAL,CAAaU,OAAO,CAACT,IAArB;EACD;;EAEDY,KAAK;IACH,OAAO1C,SAAP;EACD;;EAED4B,MAAM,CAACE,IAAD,EAAgBa,CAAhB,EAAmBC,EAAnB;IACJ,KAAKT,YAAL,CAAkBL,IAAlB;;IACAc,EAAE;EACH;;EAEDC,QAAQ;IACNnC,MAAM,CAACoC,mBAAPpC,CAA2B,SAA3BA,EAAsC,KAAKU,UAA3CV,EAAuD,KAAvDA;EACD;;AA3HgDL;;ACHnD,SAAS0C,SAAT,CAAuCC,OAAvC,EAAsFC,OAAtF,EAAkGC,IAAlG;EACE,IAAI;IACFC,OAAO,CAACC,KAARD,CAAcH,OAAdG,EAAuBF,OAAvBE,EAAgCD,IAAhCC;EADF,EAEE,OAAOlB,GAAP,EAAY;IACZ;IACAoB,UAAU,CAAC;MACT,MAAMpB,GAAN;IADQ,EAAVoB;EAGD;AACF;;AAED,SAASC,UAAT,CAAuBC,GAAvB;EACE,MAAMC,CAAC,GAAGD,GAAG,CAACE,MAAd;EACA,MAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUH,CAAV,CAAb;;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAApB,EAAuBI,CAAC,IAAI,CAA5B,EAA+B;IAC7BF,IAAI,CAACE,CAAD,CAAJF,GAAUH,GAAG,CAACK,CAAD,CAAbF;EACD;;EACD,OAAOA,IAAP;AACD;;MAEoBG,yBAAyBC;EAC5C5B,IAAI,CAAC6B,IAAD;IACF,IAAIC,OAAO,GAAGD,IAAI,KAAK,OAAvB;IAEA,MAAME,MAAM,GAAc,KAAaC,OAAvC;;IACA,IAAID,MAAM,KAAKjE,SAAf,EAA0B;MACxBgE,OAAO,GAAGA,OAAO,IAAIC,MAAM,CAACE,KAAPF,KAAiBjE,SAAtCgE;IADF,OAEO,IAAI,CAACA,OAAL,EAAc;MACnB,OAAO,KAAP;IACD,CARC,CAQD;;;sCARmBd;MAAAA;;;IAWpB,IAAIc,OAAJ,EAAa;MACX,IAAII,EAAJ;;MACA,IAAIlB,IAAI,CAACO,MAALP,GAAc,CAAlB,EAAqB;QACnB,CAACkB,EAAD,IAAOlB,IAAP;MACD;;MACD,IAAIkB,EAAE,YAAYvD,KAAlB,EAAyB;QACvB;QACA;QACA,MAAMuD,EAAN,CAHuB;MALd;;;MAWX,MAAMnC,GAAG,GAAG,IAAIpB,KAAJ,2BAA6BuD,EAAE,eAAQA,EAAE,CAAC7B,OAAX,SAAwB,EAAvD,EAAZ;MACCN,GAAW,CAACgB,OAAZhB,GAAsBmC,EAAtBnC;MACD,MAAMA,GAAN,CAbW;IAcZ;;IAED,MAAMe,OAAO,GAAGiB,MAAM,CAACF,IAAD,CAAtB;;IAEA,IAAIf,OAAO,KAAKhD,SAAhB,EAA2B;MACzB,OAAO,KAAP;IACD;;IAED,IAAI,OAAOgD,OAAP,KAAmB,UAAvB,EAAmC;MACjCD,SAAS,CAACC,OAAD,EAAU,IAAV,EAAgBE,IAAhB,CAATH;IADF,OAEO;MACL,MAAMsB,GAAG,GAAGrB,OAAO,CAACS,MAApB;MACA,MAAMa,SAAS,GAAGhB,UAAU,CAACN,OAAD,CAA5B;;MACA,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,GAApB,EAAyBT,CAAC,IAAI,CAA9B,EAAiC;QAC/Bb,SAAS,CAACuB,SAAS,CAACV,CAAD,CAAV,EAAe,IAAf,EAAqBV,IAArB,CAATH;MACD;IACF;;IAED,OAAO,IAAP;EACD;;AA7C2Ce;;MCzBzBS,0BAA6B1D;EAKhDP;QAAY;MAAEkE,IAAF;MAAQjC,OAAR;MAAiBT;IAAjB;;IACV,IAAI,CAAC2C,MAAM,CAACC,SAAPD,CAAiBD,IAAjBC,CAAL,EAA6B;MAC3B,MAAM,IAAI5D,KAAJ,CAAU,yBAAV,CAAN;IACD;;IACD,IAAI,CAAC0B,OAAD,IAAY,OAAOA,OAAP,KAAmB,QAAnC,EAA6C;MAC3C,MAAM,IAAI1B,KAAJ,CAAU,wBAAV,CAAN;IACD;;IAED,MAAM0B,OAAN;;;;;;IACA,KAAKiC,IAAL,GAAYA,IAAZ;;IACA,IAAI1C,IAAI,KAAK9B,SAAb,EAAwB;MACtB,KAAK8B,IAAL,GAAYA,IAAZ;IACD;EACF;;EAED6C,QAAQ;IACN,OAAOC,SAAS,CAAC;MACfJ,IAAI,EAAE,KAAKA,IADI;MAEfjC,OAAO,EAAE,KAAKA,OAFC;MAGfT,IAAI,EAAE,KAAKA,IAHI;MAIf+C,KAAK,EAAE,KAAKA;IAJG,CAAD,CAAhB;EAMD;;AA3B+ChE;;SCelCiE,eAAeX;EAC7B,OAAOA,KAAK,CAACQ,QAANR,EAAP;AACD;;MAMYY,qBAAqB,GAChC,UAACC,OAAD,EAAiCC,MAAjC;EAAA,IAAkEC,YAAlE,uEAAiF,IAAjF;EAAA,OACA,CAACf,KAAD,EAAegB,QAAf;IACE,IAAIhB,KAAK,IAAIgB,QAAQ,CAAChB,KAAtB,EAA6B;MAC3Bc,MAAM,CAACd,KAAK,IAAIgB,QAAQ,CAAChB,KAAnB,CAANc;IADF,OAEO,IAAI,CAACC,YAAD,IAAiBvB,KAAK,CAACyB,OAANzB,CAAcwB,QAAdxB,CAArB,EAA8C;MACnDqB,OAAO,CAACG,QAAD,CAAPH;IADK,OAEA;MACLA,OAAO,CAACG,QAAQ,CAACE,MAAV,CAAPL;IACD;EARH;AAAA;;SAiCcM,sBAAsBC;EACpC,OAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBC,GAAjB;IACL,IAAI;MACF;MACA,IAAI,OAAOH,GAAG,CAACI,MAAX,KAAsB,QAAtB,IAAkC,CAACJ,GAAG,CAACI,MAA3C,EAAmD;QACjDH,GAAG,CAACtB,KAAJsB,GAAY,IAAIlB,iBAAJ,CAAsB;UAAEC,IAAI,EAAE,CAAC,KAAT;UAAgBjC,OAAO,EAAE;QAAzB,CAAtB,CAAZkD;QACAE,GAAG;QACH;MACD;;MACDD,IAAI,CAAEG,IAAD;QACH,MAAM;UAAE1B;QAAF,IAAYsB,GAAlB;;QACA,IAAI,CAACtB,KAAL,EAAY;UACV,OAAO0B,IAAI,EAAX;QACD;;QACDN,GAAG,CAACpB,KAAJoB,kCAAoCpB,KAAK,CAAC5B,OAA1C,GAAqD4B,KAArDoB;QACA,OAAOM,IAAI,EAAX;MANE,EAAJH;IAPF,EAeE,OAAOvB,KAAP,EAAc;MACdoB,GAAG,CAACpB,KAAJoB,yCAA2CpB,KAAK,CAAC5B,OAAjD,GAA4D4B,KAA5DoB;MACAE,GAAG,CAACtB,KAAJsB,GAAY,IAAIlB,iBAAJ,CAAsB;QAAEC,IAAI,EAAE,CAAC,KAAT;QAAgBjC,OAAO,EAAE4B,KAAK,CAAC5B;MAA/B,CAAtB,CAAZkD;MACAE,GAAG;IACJ;EApBH;AAsBD;;SAEeG;EACd,MAAMC,KAAK,GAAU,EAArB;;EAEA,SAASC,QAAT;IACE,OAAO,KAAP;EACD;;EAED,MAAM/B,MAAM,GAAG,IAAIJ,gBAAJ,EAAf;;EAEA,SAASoC,eAAT,CAAyBR,GAAzB;IACE,MAAMxC,OAAO,GAAG8C,KAAK,CAACN,GAAG,CAACS,EAAL,CAArB;;IACA,IAAI,CAACjD,OAAL,EAAc;MACZ,MAAM,IAAIpC,KAAJ,oDAAqD4E,GAAG,CAACS,EAAzD,QAAN;IACD;;IAED,OAAOH,KAAK,CAACN,GAAG,CAACS,EAAL,CAAZ,CANF,CAME;;IAEAC,MAAM,CAACC,MAAPD,CAAclD,OAAO,CAACwC,GAAtBU,EAA2BV,GAA3BU,EARF,CAQE;IAEA;;IACA9C,UAAU,CAACJ,OAAO,CAAC0C,GAAT,CAAVtC;EACD;;EAED,SAASgD,mBAAT,CAA6BZ,GAA7B;IACExB,MAAM,CAAC/B,IAAP+B,CAAY,cAAZA,EAA4BwB,GAA5BxB;EACD;;EAED,SAASqC,cAAT,CAAwBb,GAAxB,EAAoDc,SAApD,EAAwE3D,EAAxE;IACE,IAAIX,GAAJ;;IACA,IAAI;MACF,MAAMuE,cAAc,GAAG,CAACf,GAAG,CAACS,EAA5B;;MACA,IAAIM,cAAJ,EAAoB;QAClBH,mBAAmB,CAACZ,GAAD,CAAnBY;MADF,OAEO;QACLJ,eAAe,CAACR,GAAD,CAAfQ;MACD;IANH,EAOE,OAAOQ,IAAP,EAAa;MACbxE,GAAG,GAAGwE,IAANxE;IACD,CAXH,CAWG;;;IAEDW,EAAE,CAACX,GAAD,CAAFW;EACD;;EAED,MAAM8D,MAAM,GAAG,IAAIrG,MAAJ,CAAW;IACxBO,UAAU,EAAE,IADY;IAExB+F,IAAI,EAAEX,QAFkB;IAGxBY,KAAK,EAAEN;EAHiB,CAAX,CAAf;;EAMA,MAAMO,UAAU,GAAqC,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBC,GAAjB;IACnD;IACAe,MAAM,CAAC1E,IAAP0E,CAAYlB,GAAZkB,EAFmD,CAEnD;;IAEAX,KAAK,CAACP,GAAG,CAACU,EAAL,CAALH,GAAqC;MAAEP,GAAF;MAAOC,GAAP;MAAYC,IAAZ;MAAkBC;IAAlB,CAArCI;EAJF;;EAOA,OAAO;IAAE9B,MAAF;IAAU4C,UAAV;IAAsBH;EAAtB,CAAP;AACD;;SAIeI,yBAAyBC;EAGvC,OAAO,CAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBC,GAAjB;IACL,MAAM3C,OAAO,GAAG+D,QAAQ,CAACvB,GAAG,CAACI,MAAL,CAAxB,CADK,CACL;;IAEA,IAAI5C,OAAO,KAAKhD,SAAhB,EAA2B;MACzB,OAAO0F,IAAI,EAAX;IACD,CALI,CAKJ;;;IAED,IAAI,OAAO1C,OAAP,KAAmB,UAAvB,EAAmC;MACjC,OAAOA,OAAO,CAACwC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBC,GAAjB,CAAd;IACD,CATI,CASJ;;;IAEDF,GAAG,CAACJ,MAAJI,GAAazC,OAAbyC;IACA,OAAOE,GAAG,EAAV;EAZF;AAcD;;SAEeqB;EACd,OAAO,CAACxB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBuB,IAAjB;IACL,MAAMC,UAAU,GAAG1B,GAAG,CAACU,EAAvB;IACA,MAAMiB,KAAK,GAAGC,QAAQ,EAAtB;IACA5B,GAAG,CAACU,EAAJV,GAAS2B,KAAT3B;IACAC,GAAG,CAACS,EAAJT,GAAS0B,KAAT1B;IACAC,IAAI,CAAEG,IAAD;MACHL,GAAG,CAACU,EAAJV,GAAS0B,UAAT1B;MACAC,GAAG,CAACS,EAAJT,GAASyB,UAATzB;MACAI,IAAI;IAHF,EAAJH;EALF;AAWD;;SAEe2B,uBAAuBC;EACrC,OAAO,CAAC9B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiB/C,CAAjB;IACL2E,MAAM,CAACC,KAAPD,CAAa,KAAbA,EAAoB9B,GAApB8B,EAAyB,KAAzBA,EAAgC7B,GAAhC6B;IACA5B,IAAI;EAFN;AAID;;SA8Be8B,sBAA4BC;EAC1C,OAAO,OAAOjC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAAuBC,GAAvB;IACL;IACA;IACA;IACA,IAAI+B,kBAAJ;IACA,MAAMC,WAAW,GAAG,IAAIC,OAAJ,CAAmB5C,OAAD;MACpC0C,kBAAkB,GAAG1C,OAArB0C;IADkB,EAApB;IAIA,IAAIG,qBAAqB,GAAY,IAArC;IACA,IAAIC,aAAa,GAAG,KAApB,CAVK,CAUL;;IAGA,MAAMC,SAAS,GAAG;MAChBD,aAAa,GAAG,IAAhBA,CADgB,CAChB;MAGA;;MAEApC,IAAI,CAAEsC,yBAAD;QACH;QACAH,qBAAqB,GAAGG,yBAAxBH;QACAH,kBAAkB;MAHhB,EAAJhC;MAKA,MAAMiC,WAAN;IAXF;;IAcA,IAAI;MACF,MAAMF,eAAe,CAACjC,GAAD,EAAMC,GAAN,EAAWsC,SAAX,CAArB;;MAEA,IAAID,aAAJ,EAAmB;QACjB,MAAMH,WAAN,CADiB;;QAEhBE,qBAA+C,CAAC,IAAD,CAA/CA;MAFH,OAGO;QACLlC,GAAG,CAAC,IAAD,CAAHA;MACD;IARH,EASE,OAAOxB,KAAP,EAAc;MACd,IAAI0D,qBAAJ,EAA2B;QACxBA,qBAA+C,CAAC1D,KAAD,CAA/C0D;MADH,OAEO;QACLlC,GAAG,CAACxB,KAAD,CAAHwB;MACD;IACF;EA1CH;AA4CD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpPD;;;;;;MAIasC,mBAAmBpE;EAG9BvD;IACE;;;;IACA,KAAK4H,WAAL,GAAmB,EAAnB;EACD;EAED;;;;;;;;;EAOsC,aAAjBC,iBAAiB,CACpC3C,GADoC,EAEpCC,GAFoC,EAGpC2C,eAHoC;IAWpC,MAAMC,cAAc,GAA8B,EAAlD;IACA,IAAIlE,KAAK,GAAG,IAAZ;IACA,IAAImE,UAAU,GAAG,KAAjB,CAboC,CAapC;;IAGA,KAAK,MAAMzB,UAAX,IAAyBuB,eAAzB,EAA0C;MACxC,CAACjE,KAAD,EAAQmE,UAAR,IAAsB,MAAML,UAAU,CAACM,cAAXN,CAA0BzC,GAA1ByC,EAA+BxC,GAA/BwC,EAAoCpB,UAApCoB,EAAgDI,cAAhDJ,CAA5B;;MACA,IAAIK,UAAJ,EAAgB;QACd;MACD;IACF;;IACD,OAAO,CAACnE,KAAD,EAAQmE,UAAR,EAAoBD,cAAc,CAACG,OAAfH,EAApB,CAAP;EACD;EAED;;;;;;;;EAM6B,OAAdE,cAAc,CAC3B/C,GAD2B,EAE3BC,GAF2B,EAG3BoB,UAH2B,EAI3BwB,cAJ2B;IAM3B,OAAO,IAAIT,OAAJ,CAAa5C,OAAD;MACjB,MAAMW,GAAG,GAA2B1D,GAAD;QACjC,MAAMkC,KAAK,GAAGlC,GAAG,IAAIwD,GAAG,CAACtB,KAAzB;;QACA,IAAIA,KAAJ,EAAW;UACTsB,GAAG,CAACtB,KAAJsB,GAAYX,cAAc,CAACX,KAAD,CAA1BsB;QACD,CAJgC,CAIhC;;;QAEDT,OAAO,CAAC,CAACb,KAAD,EAAQ,IAAR,CAAD,CAAPa;MANF;;MASA,MAAMU,IAAI,GAA4B+C,aAAD;QACnC,IAAIhD,GAAG,CAACtB,KAAR,EAAe;UACbwB,GAAG,CAACF,GAAG,CAACtB,KAAL,CAAHwB;QADF,OAEO;UACL,IAAI8C,aAAJ,EAAmB;YACjB,IAAI,OAAOA,aAAP,KAAyB,UAA7B,EAAyC;cACvC9C,GAAG,CAAC,IAAIpB,iBAAJ,CAAsB;gBAAEC,IAAI,EAAE,CAAC,KAAT;gBAAgBjC,OAAO,EAAE;cAAzB,CAAtB,CAAD,CAAHoD;YACD;;YACD0C,cAAc,CAACrG,IAAfqG,CAAoBI,aAApBJ;UALG;;;UASLrD,OAAO,CAAC,CAAC,IAAD,EAAO,KAAP,CAAD,CAAPA;QACD;MAbH;;MAgBA,IAAI;QACF6B,UAAU,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAiBC,GAAjB,CAAVkB;MADF,EAEE,OAAO1C,KAAP,EAAc;QACdwB,GAAG,CAACxB,KAAD,CAAHwB;MACD;IA9BI,EAAP;EAgCD;EAED;;;;;;EAIuC,aAAlB+C,kBAAkB,CAAC3B,QAAD;IACrC,KAAK,MAAM/D,OAAX,IAAsB+D,QAAtB,EAAgC;MAC9B,MAAM,IAAIa,OAAJ,CAAkB,CAAC5C,OAAD,EAAUC,MAAV;QACtBjC,OAAO,CAAEf,GAAD,IAAUA,GAAG,GAAGgD,MAAM,CAAChD,GAAD,CAAT,GAAiB+C,OAAO,EAAtC,CAAPhC;MADI,EAAN;IAGD;EACF;EAED;;;;;;EAIkC,OAAnB2F,mBAAmB,CAACnD,GAAD,EAA4BC,GAA5B,EAAwD6C,UAAxD;IAChC,IAAI,EAAE,YAAY7C,GAAd,KAAsB,EAAE,WAAWA,GAAb,CAA1B,EAA6C;MAC3C,MAAM,IAAIlB,iBAAJ,CAAsB;QAAEC,IAAI,EAAE,CAAC,KAAT;QAAgBjC,OAAO,EAAE;MAAzB,CAAtB,CAAN;IACD;;IACD,IAAI,CAAC+F,UAAL,EAAiB;MACf,MAAM,IAAI/D,iBAAJ,CAAsB;QAAEC,IAAI,EAAE,CAAC,KAAT;QAAgBjC,OAAO,EAAE;MAAzB,CAAtB,CAAN;IACD;EACF;EAED;;;;;;;EAKAP,IAAI,CAAO6E,UAAP;IACF,KAAKqB,WAAL,CAAiBlG,IAAjB,CAAsB6E,UAAtB;EACD;;EAqCD+B,MAAM,CAACpD,GAAD,EAAe5C,EAAf;IACJ,IAAIA,EAAE,IAAI,OAAOA,EAAP,KAAc,UAAxB,EAAoC;MAClC,MAAM,IAAI/B,KAAJ,CAAU,4CAAV,CAAN;IACD;;IAED,IAAI8C,KAAK,CAACyB,OAANzB,CAAc6B,GAAd7B,CAAJ,EAAwB;MACtB,IAAIf,EAAJ,EAAQ;QACN,OAAO,KAAKiG,YAAL,CAAkBrD,GAAlB,EAAuB5C,EAAvB,CAAP;MACD;;MACD,OAAO,KAAKiG,YAAL,CAAkBrD,GAAlB,CAAP;IACD;;IAED,IAAI5C,EAAJ,EAAQ;MACN,OAAO,KAAKkG,OAAL,CAAatD,GAAb,EAA0C5C,EAA1C,CAAP;IACD;;IACD,OAAO,KAAKmG,cAAL,CAAoBvD,GAApB,CAAP;EACD;EAED;;;;;;;;EAMAwD,YAAY;IACV,OAAO,OAAOxD,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAAuBC,GAAvB;MACL,IAAI;QACF,MAAM,CAACsD,eAAD,EAAkBX,UAAlB,EAA8BD,cAA9B,IAAgD,MAAMJ,UAAU,CAACE,iBAAXF,CAA6BzC,GAA7ByC,EAAkCxC,GAAlCwC,EAAuC,KAAKC,WAA5CD,CAA5D;;QAEA,IAAIK,UAAJ,EAAgB;UACd,MAAML,UAAU,CAACS,kBAAXT,CAA8BI,cAA9BJ,CAAN;UACA,OAAOtC,GAAG,CAACsD,eAAD,CAAV;QACD;;QAED,OAAOvD,IAAI,CAAC,MAAOwD,eAAP;UACV,IAAI;YACF,MAAMjB,UAAU,CAACS,kBAAXT,CAA8BI,cAA9BJ,CAAN;UADF,EAEE,OAAO9D,KAAP,EAAc;YACd,OAAO+E,eAAe,CAAC/E,KAAD,CAAtB;UACD;;UACD,OAAO+E,eAAe,EAAtB;QANS,EAAX;MARF,EAgBE,OAAO/E,KAAP,EAAc;QACd,OAAOwB,GAAG,CAACxB,KAAD,CAAV;MACD;IAnBH;EAqBD;;EAYyB,MAAZ0E,YAAY,CACxBM,IADwB,EAExBvG,EAFwB;IAIxB;IACA,IAAI;MACF;MACA;MACA,MAAMwG,SAAS,GAAG,MAAMxB,OAAO,CAACyB,GAARzB;MAEtBuB,IAAI,CAACG,GAALH,CAAS,KAAKJ,cAAL,CAAoBzH,IAApB,CAAyB,IAAzB,CAAT6H,CAFsBvB,CAAxB,CAHE;;MASF,IAAIhF,EAAJ,EAAQ;QACN,OAAOA,EAAE,CAAC,IAAD,EAAOwG,SAAP,CAAT;MACD;;MACD,OAAOA,SAAP;IAZF,EAaE,OAAOjF,KAAP,EAAc;MACd,IAAIvB,EAAJ,EAAQ;QACN,OAAOA,EAAE,CAACuB,KAAD,CAAT;MACD;;MAED,MAAMA,KAAN;IACD;EACF;EAED;;;;;EAGQ4E,cAAc,CAACvD,GAAD;IACpB,OAAO,IAAIoC,OAAJ,CAAa5C,OAAD;MACjB,KAAK8D,OAAL,CAAatD,GAAb,EAAkB,CAACiB,IAAD,EAAOhB,GAAP;QAChB;QACA;QACAT,OAAO,CAACS,GAAD,CAAPT;MAHF;IADK,EAAP;EAOD;EAED;;;;;;;;EAMqB,MAAP8D,OAAO,CAACS,SAAD,EAAkC3G,EAAlC;IACnB,IAAI,CAAC2G,SAAD,IAAc5F,KAAK,CAACyB,OAANzB,CAAc4F,SAAd5F,CAAd,IAA0C,OAAO4F,SAAP,KAAqB,QAAnE,EAA6E;MAC3E,MAAMpF,KAAK,GAAG,IAAII,iBAAJ,CAAsB;QAAEC,IAAI,EAAE,CAAC,KAAT;QAAgBjC,OAAO,EAAE;MAAzB,CAAtB,CAAd;MACA,OAAOK,EAAE,CAACuB,KAAD,EAAQ;QAAE+B,EAAE,EAAElG,SAAN;QAAiBwJ,OAAO,EAAE,KAA1B;QAAiCrF;MAAjC,CAAR,CAAT;IACD;;IAED,IAAI,OAAOoF,SAAS,CAAC3D,MAAjB,KAA4B,QAAhC,EAA0C;MACxC,MAAMzB,KAAK,GAAG,IAAII,iBAAJ,CAAsB;QAAEC,IAAI,EAAE,CAAC,KAAT;QAAgBjC,OAAO,EAAE;MAAzB,CAAtB,CAAd;MACA,OAAOK,EAAE,CAACuB,KAAD,EAAQ;QAAE+B,EAAE,EAAEqD,SAAS,CAACrD,EAAhB;QAAoBsD,OAAO,EAAE,KAA7B;QAAoCrF;MAApC,CAAR,CAAT;IACD;;IAED,MAAMqB,GAAG,uBAA8B+D,SAA9B,CAAT;;IACA,MAAM9D,GAAG,GAA0B;MACjCS,EAAE,EAAEV,GAAG,CAACU,EADyB;MAEjCsD,OAAO,EAAEhE,GAAG,CAACgE;IAFoB,CAAnC;IAIA,IAAIrF,KAAK,GAAU,IAAnB;;IAEA,IAAI;MACF,MAAM,KAAKsF,eAAL,CAAqBjE,GAArB,EAA0BC,GAA1B,CAAN;IADF,EAEE,OAAOiE,MAAP,EAAe;MACf;MACA;MACAvF,KAAK,GAAGuF,MAARvF;IACD;;IAED,IAAIA,KAAJ,EAAW;MACT;MACA,OAAOsB,GAAG,CAACJ,MAAX;;MACA,IAAI,CAACI,GAAG,CAACtB,KAAT,EAAgB;QACdsB,GAAG,CAACtB,KAAJsB,GAAYX,cAAc,CAACX,KAAD,CAA1BsB;MACD;IACF;;IAED,OAAO7C,EAAE,CAACuB,KAAD,EAAQsB,GAAR,CAAT;EACD;EAED;;;;;;;EAK6B,MAAfgE,eAAe,CAACjE,GAAD,EAA4BC,GAA5B;IAC3B,MAAM,CAACtB,KAAD,EAAQmE,UAAR,EAAoBD,cAApB,IAAsC,MAAMJ,UAAU,CAACE,iBAAXF,CAA6BzC,GAA7ByC,EAAkCxC,GAAlCwC,EAAuC,KAAKC,WAA5CD,CAAlD,CAD2B,CAC3B;IAGA;;IACAA,UAAU,CAACU,mBAAXV,CAA+BzC,GAA/ByC,EAAoCxC,GAApCwC,EAAyCK,UAAzCL,EAL2B,CAK3B;IAGA;;;IACA,MAAMA,UAAU,CAACS,kBAAXT,CAA8BI,cAA9BJ,CAAN,CAT2B,CAS3B;IAGA;;IACA,IAAI9D,KAAJ,EAAW;MACT,MAAMA,KAAN;IACD;EACF;;AA7T6BN;;SAgUhB8F,gBAAgBvB;EAC9B,MAAMwB,MAAM,GAAG,IAAI3B,UAAJ,EAAf;EACAG,eAAe,CAACyB,OAAhBzB,CAAyBvB,UAAD,IAAgB+C,MAAM,CAAC5H,IAAP4H,CAAY/C,UAAZ+C,CAAxCxB;EACA,OAAOwB,MAAM,CAACZ,YAAPY,EAAP;AACD;;SAMeE,mBAAmBC;EACjC,IAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACH,MAAnB,EAA2B;IACzB,MAAM,IAAI/I,KAAJ,CAAU,2BAAV,CAAN;EACD;;EAED,MAAM;IAAE+I;EAAF,IAAaG,IAAnB,CALiCA,CAKjC;;EAEA,IAAIrD,MAAJ;;EAEA,SAASC,IAAT;IACE,OAAO3G,SAAP;EACD;;EAED,SAAS4G,KAAT,CAAepB,GAAf,EAA0Ce,SAA1C,EAA8D3D,EAA9D;IACEgH,MAAM,CAAChB,MAAPgB,CAAcpE,GAAdoE,EAAmB,CAACnD,IAAD,EAAOhB,GAAP;MACjBiB,MAAM,CAAC1E,IAAP0E,CAAYjB,GAAZiB;IADF;IAGA9D,EAAE;EACH;;EAED8D,MAAM,GAAG,IAAIrG,MAAJ,CAAW;IAAEO,UAAU,EAAE,IAAd;IAAoB+F,IAApB;IAA0BC;EAA1B,CAAX,CAATF,CApBiCqD,CAoBjC;;EAGA,IAAIH,MAAM,CAACI,EAAX,EAAe;IACbJ,MAAM,CAACI,EAAPJ,CAAU,cAAVA,EAA2BrH,OAAD;MACxBmE,MAAM,CAAC1E,IAAP0E,CAAYnE,OAAZmE;IADF;EAGD;;EACD,OAAOA,MAAP;AACD;;MCtXoBuD,kBAAkB5J;EAKrCC;QAAY;MAAE4J,MAAF;MAAU3J;IAAV;IACV,MAAM;MAAEK,UAAU,EAAE;IAAd,CAAN;;;;;;IACA,KAAKuJ,OAAL,GAAeD,MAAf;IACA,KAAKlJ,KAAL,GAAaT,IAAb;EACD;EAED;;;;;EAGAmC,KAAK;IACH,OAAO1C,SAAP;EACD;EAED;;;;;;;;;EAOA4B,MAAM,CAACwI,KAAD,EAAiB7D,SAAjB,EAA4C8D,QAA5C;IACJ,KAAKF,OAAL,CAAanI,IAAb,CAAkB;MAChBzB,IAAI,EAAE,KAAKS,KADK;MAEhBc,IAAI,EAAEsI;IAFU,CAAlB;;IAIAC,QAAQ;EACT;;AA/BoChK;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCM1BiK,gBAAgB,GAAGC,MAAM,CAAC,kBAAD;;MASzBC,wBAAwBnK;EAKnCC;QAAYyJ,2EAAgC;IAC1C,sCACKA,IADL;MAEEnJ,UAAU,EAAE;IAFd;;;;;;IAIA,KAAK6J,WAAL,GAAmB,EAAnB;EACD;;EAEDC,YAAY,CAACnK,IAAD;IACV;IACA,IAAI,CAACA,IAAL,EAAW;MACT,MAAM,IAAIM,KAAJ,CAAU,0CAAV,CAAN;IACD;;IAED,IAAI,KAAK4J,WAAL,CAAiBlK,IAAjB,CAAJ,EAA4B;MAC1B,MAAM,IAAIM,KAAJ,kDAAmDN,IAAnD,uBAAN;IACD,CARS,CAQT;;;IAGD,MAAMoK,SAAS,GAAG,IAAIV,SAAJ,CAAc;MAAEC,MAAM,EAAE,IAAV;MAAgB3J;IAAhB,CAAd,CAAlB;IACA,KAAKkK,WAAL,CAAiBlK,IAAjB,IAAyBoK,SAAzB,CAZU,CAYV;IAGA;;IACAC,YAAY,CAAC,IAAD,EAAQlB,MAAD,IAA2BiB,SAAS,CAACE,OAAVF,CAAkBjB,MAAM,IAAI1J,SAA5B2K,CAAlC,CAAZC;IAEA,OAAOD,SAAP;EACD,CAhCkCtK,CAgClC;;;EAGDyK,YAAY,CAACvK,IAAD;IACV;IACA,IAAI,CAACA,IAAL,EAAW;MACT,MAAM,IAAIM,KAAJ,CAAU,0CAAV,CAAN;IACD;;IACD,IAAI,KAAK4J,WAAL,CAAiBlK,IAAjB,CAAJ,EAA4B;MAC1B,MAAM,IAAIM,KAAJ,kDAAmDN,IAAnD,uBAAN;IACD,CAPS,CAOT;;;IAED,KAAKkK,WAAL,CAAiBlK,IAAjB,IAAyB+J,gBAAzB;EACD;;EAED5H,KAAK;IACH,OAAO1C,SAAP;EACD;;EAED4B,MAAM,CAACwI,KAAD,EAAe7D,SAAf,EAA0C8D,QAA1C;IACJ,MAAM;MAAE9J,IAAF;MAAQuB;IAAR,IAAiBsI,KAAvB;;IAEA,IAAI,CAAC7J,IAAL,EAAW;MACTG,MAAM,CAACqK,OAAPrK,CAAesK,IAAftK,4DAAuE0J,KAAvE;MACA,OAAOC,QAAQ,EAAf;IACD,CANG,CAMH;;;IAGD,MAAMM,SAAS,GAAG,KAAKF,WAAL,CAAiBlK,IAAjB,CAAlB;;IACA,IAAI,CAACoK,SAAL,EAAgB;MACdjK,MAAM,CAACqK,OAAPrK,CAAesK,IAAftK,wDAAmEH,IAAnE;MACA,OAAO8J,QAAQ,EAAf;IACD,CAbG,CAaH;;;IAGD,IAAIM,SAAS,KAAKL,gBAAlB,EAAoC;MAClCK,SAAS,CAAC3I,IAAV2I,CAAe7I,IAAf6I;IACD;;IAED,OAAON,QAAQ,EAAf;EACD;;AAxEkChK,C;;;AA4ErC,SAASuK,YAAT,CAAsBlE,MAAtB,EAA+CuE,GAA/C;EACE,MAAMrI,EAAE,GAAGsI,IAAI,CAACD,GAAD,CAAf;EACAE,GAAG,CAACzE,MAAD,EAA8B;IAAE0E,QAAQ,EAAE;EAAZ,CAA9B,EAAmDxI,EAAnD,CAAHuI;EACAA,GAAG,CAACzE,MAAD,EAA8B;IAAE2E,QAAQ,EAAE;EAAZ,CAA9B,EAAmDzI,EAAnD,CAAHuI;AACD;;SAEeG,eAAe5E;EAC7B,MAAM6E,GAAG,GAAG,IAAIf,eAAJ,EAAZ;;EACAe,GAAG,CAACC,SAAJD,GAAgB,SAASE,YAAT,CAAsBlL,IAAtB;IACd,IAAI,KAAKkK,WAAL,CAAiBlK,IAAjB,CAAJ,EAA4B;MAC1B,OAAO,KAAKkK,WAAL,CAAiBlK,IAAjB,CAAP;IACD;;IACD,OAAO,KAAKmK,YAAL,CAAkBnK,IAAlB,CAAP;EAJF;;EAOAmL,IAAI,CAAChF,MAAD,EAA8B6E,GAA9B,EAAwD7E,MAAxD,EAAsFzE,GAAD;IACvF,IAAIA,GAAJ,EAASvB,MAAM,CAACqK,OAAPrK,CAAeyD,KAAfzD,CAAqBuB,GAArBvB;EADP,EAAJgL;EAGA,OAAOH,GAAP;AACD;;MC/GoBI,0BAA0BvL;EAC7C+B,YAAY,CAACL,IAAD;IACV,IAAIM,gBAAgB,GAAG,KAAKjB,aAA5B;;IACA,IAAI,OAAOW,IAAP,KAAgB,QAApB,EAA8B;MAC5B,MAAM8J,OAAO,GAAG9J,IAAhB;;MACA,IAAI,OAAO8J,OAAO,CAAC9J,IAAf,KAAwB,QAA5B,EAAsC;QACpC,MAAM+J,WAAW,GAAGD,OAAO,CAAC9J,IAA5B;;QACA,IAAI6B,KAAK,CAACyB,OAANzB,CAAckI,WAAW,CAACC,MAA1BnI,KAAqCkI,WAAW,CAACC,MAAZD,CAAmBpI,MAAnBoI,GAA4B,CAArE,EAAwE;UACtE,MAAME,gBAAgB,GAAGF,WAAW,CAACC,MAAZD,CAAmB,CAAnBA,CAAzB;;UACA,IAAIE,gBAAgB,CAACC,OAArB,EAA8B;YAC5B5J,gBAAgB,GAAG2J,gBAAgB,CAACC,OAApC5J;UAHoE;;;UAOtE2J,gBAAgB,CAACC,OAAjBD,GAA2BrL,MAAM,CAACuL,QAAPvL,CAAgB8B,MAA3CuJ;QACD;MACF;IACF;;IAED,KAAK7K,aAAL,CAAmBmB,WAAnB,CACE;MACE7B,MAAM,EAAE,KAAKS,OADf;MAEEa;IAFF,CADF,EAKEM,gBALF;EAOD;;AA1B4ChC","names":["noop","undefined","SYN","ACK","BRK","BasePostMessageStream","Duplex","constructor","name","target","targetWindow","window","targetOrigin","objectMode","Error","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","_break","cork","_write","_onData","data","uncork","push","err","emit","_postMessage","originConstraint","postMessage","event","message","origin","source","_read","_","cb","_destroy","removeEventListener","safeApply","handler","context","args","Reflect","apply","setTimeout","arrayClone","arr","n","length","copy","Array","i","SafeEventEmitter","EventEmitter","type","doError","events","_events","error","er","len","listeners","SerializableError","code","Number","isInteger","toString","stringify","stack","serializeError","getRpcPromiseCallback","resolve","reject","unwrapResult","response","isArray","result","createErrorMiddleware","log","req","res","next","end","method","done","createStreamMiddleware","idMap","readNoop","processResponse","id","Object","assign","processNotification","processMessage","_encoding","isNotification","_err","stream","read","write","middleware","createScaffoldMiddleware","handlers","createIdRemapMiddleware","_end","originalId","newId","randomId","createLoggerMiddleware","logger","debug","createAsyncMiddleware","asyncMiddleware","resolveNextPromise","nextPromise","Promise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","JRPCEngine","_middleware","_runAllMiddleware","middlewareStack","returnHandlers","isComplete","_runMiddleware","reverse","returnHandler","_runReturnHandlers","_checkForCompletion","handle","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","handlerCallback","reqs","responses","all","map","callerReq","jsonrpc","_processRequest","_error","mergeMiddleware","engine","forEach","createEngineStream","opts","on","Substream","parent","_parent","chunk","callback","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_substreams","createStream","substream","anyStreamEnd","destroy","ignoreStream","console","warn","_cb","once","eos","readable","writable","setupMultiplex","mux","getStream","streamHelper","pump","PostMessageStream","dataObj","dataObjData","params","dataObjDataParam","_origin","location"],"sources":["../src/basePostMessageStream.ts","../src/safeEventEmitter.ts","../src/serializableError.ts","../src/jrpc.ts","../src/jrpcEngine.ts","../src/substream.ts","../src/mux.ts","../src/postMessageStream.ts"],"sourcesContent":[null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}